{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/Work/ccfe/frontend/src/components/Query.js\";\nimport React, { Component } from 'react';\nimport { Link, NavLink, withRouter, Redirect } from \"react-router-dom\";\nimport { Dropdown, InputGroup, DropdownButton, FormControl, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Select } from \"react-dropdown-select\";\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport store from \"../store/index\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios'; //import MyTable from \"./table\";\n\nimport Sugggestions from \"./Suggestions\";\nimport Cookies from 'js-cookie';\nimport ObjectList from 'react-object-list'; //import {FontAwesome} from 'react-object-list/icons';\n\nimport { AppProvider, Page } from '@shopify/polaris';\nimport DataTable from './DataTable.js';\nimport { HOST } from \"../constants/host.js\";\nimport \"./Query.css\";\n\nconst _ = require('lodash');\n\nconst {\n  List,\n  Seq\n} = require(\"immutable\");\n\nclass Query extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queries: [{\n        search_type: \"\",\n        value: \"\",\n        key: 0\n      }],\n      possible_queries: [\"Source Cell Type\", \"Target Cell Type\", \"Species\", \"Chemicals\", \"Transcription factors\"],\n      currentPage: 1,\n      perPage: 7,\n      totalCount: 0,\n      used_fields: [],\n      sortKeys: [],\n      response: Array(),\n      query_status: \"WAIT\",\n      \"host_with_port\": HOST,\n      //\"https://cfm.mipt.ru:8443\", //\"http://127.0.0.1:40001\", //\n      \"data\": Array(),\n      \"dataView\": Array(),\n      \"queried\": false,\n      indexes: {}\n    };\n\n    this.handlePrepairDataView = () => {\n      let data = [...this.state.data];\n      console.log(\"ROW\", this.state.data[0]);\n      data = data.map((row, idx) => {\n        let rowTmp = {\n          \"ViewProtocol\": React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"/viewProtocol/\" + row[\"id\"]\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \" Protocol \", row[\"id\"], \" \")),\n          ...row\n        };\n        rowTmp[\"chemicals_common\"] = rowTmp[\"chemicals_common\"].map((e, i) => {\n          //console.log(deleted)\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \" * \", React.createElement(\"a\", {\n            href: \"https://pubchem.ncbi.nlm.nih.gov/compound/\" + row[\"chemicals_cid\"][i],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \" \", e, \" \"), \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }), \" \");\n        });\n        rowTmp[\"tfs\"] = rowTmp[\"tfs\"].map((e, i) => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"* \", e, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), \" \");\n        });\n        return rowTmp;\n      });\n      this.setState({\n        \"dataView\": data,\n        \"data\": data\n      });\n    };\n\n    this.handleRequestAllData = () => {\n      console.log(\"Requesting data from server...\");\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': \"*\"\n        }\n      };\n      axios.get(HOST + \"/api/requestAllData\", config).then(response => {\n        //console.log(\"RESPOONSE\", responseCopy)\n        this.setState({\n          \"data\": response.data.response,\n          \"indexes\": response.data.indexes,\n          \"totalCount\": response.data.response.length\n        });\n        this.handlePrepairDataView(); //console.log(\"AGAIN\")\n      }).catch(function (error) {\n        console.log(\"ERROR AT GETTING ALL DATA:\", error);\n      });\n    };\n\n    this.handleChangeQueryType = (idx, e, eKey) => {\n      const used_fields = this.state.used_fields.filter(sidx => {\n        return sidx !== idx;\n      });\n      e.persist(); //console.log(idx)\n      //console.log(e)\n      //console.log(e.target.text)\n      //alert(e.target.value)\n\n      const queries = this.state.queries;\n      queries[idx].search_type = e.target.text;\n      this.setState({\n        queries: queries,\n        used_fields: used_fields\n      });\n    };\n\n    this.handleChangeQuery = (idx, value) => {\n      console.log(idx, value);\n      const queries = this.state.queries;\n      queries[idx].value = value;\n      this.setState({\n        queries: queries\n      });\n    };\n\n    this.handleAddField = () => {\n      if (this.state.queries.length <= 5) {\n        const n_f = this.state.number_of_queries;\n        const queries = [...this.state.queries, {\n          search_type: \"\",\n          value: \"\",\n          key: n_f + 1\n        }];\n        this.setState({\n          number_of_queries: n_f + 1,\n          queries: queries\n        }); //console.log(n_f, queries)\n        //console.log(this.state.used_fields)\n      }\n    };\n\n    this.handleRemoveField = id => {\n      if (this.state.queries && this.state.queries.length > 1) {\n        console.log(\"REMOVING FIELD!\");\n        console.log(this.state.queries.length);\n        const n_f = this.state.number_of_queries;\n        const queries = this.state.queries.filter(({\n          field\n        }, idx) => {\n          return idx !== id;\n        });\n        this.setState({\n          number_of_queries: n_f - 1,\n          queries: queries\n        }); //console.log(queries)\n      }\n    };\n\n    this.handleTitle = index => {\n      return this.state.queries[index].search_type == \"\" ? \"Possible fields\" : this.state.queries[index].search_type;\n    };\n\n    this.redirectToHome = () => {\n      this.props.history.push(`/`);\n    };\n\n    this.handleFilterData = () => {\n      // This function isresponsible for searching in table using queries\n      let data = [...this.state.data]; //console.log(\"DATAVIEW BEFORE:\", data)\n\n      this.state.queries.forEach(query => {\n        const queryPrepared = query.value.trim().toLowerCase();\n\n        if (query.search_type && query.value.length > 0 && queryPrepared in this.state.indexes[query.search_type]) {\n          let convenient_inds = this.state.indexes[query.search_type][queryPrepared];\n          console.log(\"GOOD INDS\", convenient_inds);\n          data = data.filter((row, i) => {\n            //console.log(query)\n            //console.log(row[fieldMap[query.search_type]])\n            if (convenient_inds.indexOf(i) !== -1) {\n              console.log(i);\n            }\n\n            return convenient_inds.indexOf(i) !== -1;\n          });\n        }\n      }); //console.log(\"DATAVIEW:\", data)\n\n      this.setState({\n        \"dataView\": data\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.queries[0].value.length > 1) {\n        console.log(\"LENGTH\", this.state.queries[0].value.length);\n        this.handleFilterData();\n      } else {\n        console.log(\"Too short!!\");\n        const data = [...this.state.data];\n        this.setState({\n          \"dataView\": data\n        });\n      }\n    };\n\n    this.makeTable = () => {\n      if (!this.state.queried) {\n        this.handleRequestAllData(); //console.log(\"DATAVIEW\",this.state.dataView)\n\n        this.setState({\n          \"queried\": true\n        });\n      }\n\n      const headings = [\"View Protocol\", \"Species\", \"Source Cell Type\", \"Target Cell Type\", \"Duration, days\", \"Medium\", \"Initial Culture\", //\"title\", \n      \"Yield\", //\"Comment On Yield\",\n      //\"Type Of Protocol\",\n      //\"Comment On Protocol\",\n      //\"DOI\",\n      //\"authors\", \n      //\"Chemicals CID\",\n      \"Chemicals\", //\"MOAs\", \n      \"Transcription factors\"];\n\n      if (this.state.data.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \" \");\n      } else {\n        console.log(\"LOG\", this.state.dataView[0]);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(ObjectList, {\n          columns: [{\n            dataKey: 'ViewProtocol',\n            header: 'View Protocol'\n          }, {\n            dataKey: 'species',\n            header: 'Species'\n          }, {\n            dataKey: 'sourceCellType',\n            header: \"Source Cell Type\"\n          }, {\n            dataKey: 'targetCellType',\n            header: \"Target Cell Type\"\n          }, {\n            dataKey: 'duration',\n            header: \"Duration, days\"\n          }, {\n            dataKey: 'medium',\n            header: 'Medium'\n          }, {\n            dataKey: 'chemicals_common',\n            header: 'Chemicals'\n          }, {\n            dataKey: 'tfs',\n            header: \"Transcription Factors\"\n          }],\n          data: this.state.dataView,\n          meta: {\n            totalCount: this.state.dataView.length\n          },\n          favouritesEnabled: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  render() {\n    //console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"query container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Query Database\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(React.Fragment, null, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, this.state.queries.map((fields, index) => {\n      return React.createElement(Form.Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Query...\",\n        onChange: e => {\n          this.handleChangeQuery(index, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 6,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        title: this.handleTitle(index),\n        s: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, this.state.possible_queries.map(field => {\n        return React.createElement(Dropdown.Item, {\n          eventkey: field,\n          onSelect: (eKey, e) => {\n            this.handleChangeQueryType(index, e, eKey);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, field);\n      })), \"  \"), React.createElement(Col, {\n        xs: 6,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        onClick: this.handleAddField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Add\")), React.createElement(Col, {\n        xs: 1,\n        md: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          this.handleRemoveField(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Remove\")));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(Form.Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Query\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, this.makeTable()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Query);","map":{"version":3,"sources":["/home/alex/Documents/Work/ccfe/frontend/src/components/Query.js"],"names":["React","Component","Link","NavLink","withRouter","Redirect","Dropdown","InputGroup","DropdownButton","FormControl","Form","Button","Row","Col","Select","LiveProvider","LiveEditor","LiveError","LivePreview","store","axios","Sugggestions","Cookies","ObjectList","AppProvider","Page","DataTable","HOST","_","require","List","Seq","Query","state","queries","search_type","value","key","possible_queries","currentPage","perPage","totalCount","used_fields","sortKeys","response","Array","query_status","indexes","handlePrepairDataView","data","console","log","map","row","idx","rowTmp","pathname","e","i","setState","handleRequestAllData","config","headers","get","then","length","catch","error","handleChangeQueryType","eKey","filter","sidx","persist","target","text","handleChangeQuery","handleAddField","n_f","number_of_queries","handleRemoveField","id","field","handleTitle","index","redirectToHome","props","history","push","handleFilterData","forEach","query","queryPrepared","trim","toLowerCase","convenient_inds","indexOf","handleSubmit","event","preventDefault","makeTable","queried","headings","dataView","dataKey","header","render","fields"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link, NavLink, withRouter, Redirect} from \"react-router-dom\"\nimport { Dropdown, InputGroup, DropdownButton, FormControl, Form, Button, Row, Col} from 'react-bootstrap'\nimport {Select} from \"react-dropdown-select\";\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport store from \"../store/index\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\n//import MyTable from \"./table\";\nimport Sugggestions from \"./Suggestions\"\n\nimport Cookies from 'js-cookie';\nimport ObjectList from 'react-object-list';\n//import {FontAwesome} from 'react-object-list/icons';\nimport {AppProvider, Page} from '@shopify/polaris';\nimport DataTable from './DataTable.js';\nimport {HOST} from \"../constants/host.js\"\nimport \"./Query.css\"\n\n\nconst _ = require('lodash'); \nconst {List, Seq} = require(\"immutable\");\n\n\n\n\n\nclass Query extends Component {\n\n\n\n\n    state = {\n        queries: [\n            {search_type:\"\", value: \"\", key: 0},\n        ],\n        possible_queries:[\n          \"Source Cell Type\",\n          \"Target Cell Type\",\n          \"Species\",\n          \"Chemicals\",\n          \"Transcription factors\"\n          \n      ],\n        currentPage:1,\n        perPage: 7,\n        totalCount: 0,\n        used_fields:[],\n        sortKeys: [],\n        response:Array(),\n        query_status:\"WAIT\",\n        \"host_with_port\": HOST, //\"https://cfm.mipt.ru:8443\", //\"http://127.0.0.1:40001\", //\n        \"data\": Array(),\n        \"dataView\": Array(),\n        \n        \"queried\": false,\n        indexes: {}\n\n    }\n \n    handlePrepairDataView = () => {\n      \n      let data = [...this.state.data]\n      console.log(\"ROW\", this.state.data[0])\n      data = data.map((row, idx) => {\n        \n        let rowTmp = {\n\n          \"ViewProtocol\": <div><Link to={{\n            pathname:\"/viewProtocol/\" + row[\"id\"],\n          \n          }}> Protocol {row[\"id\"]} </Link></div>,\n          ...row\n        }\n        rowTmp[\"chemicals_common\"] = rowTmp[\"chemicals_common\"].map((e, i) => {\n          //console.log(deleted)\n          return <div> * <a href={ \"https://pubchem.ncbi.nlm.nih.gov/compound/\" + row[\"chemicals_cid\"][i]}> {e} </a> <br></br> </div>\n        }) \n        rowTmp[\"tfs\"] = rowTmp[\"tfs\"].map((e, i) => {\n          return <div>* {e} <br></br> </div>\n          \n        })\n        \n        return rowTmp\n      }\n      )\n      this.setState({\n        \"dataView\": data,\n        \"data\": data\n      }) \n    }\n\n\n\n    handleRequestAllData = () => {\n        console.log(\"Requesting data from server...\")\n        const config = { \n            headers: {'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin':\"*\"} \n            };\n\n        axios.get(HOST + \"/api/requestAllData\",\n         config).then((response) => {\n           //console.log(\"RESPOONSE\", responseCopy)\n            this.setState({\n                \"data\": response.data.response,\n                \"indexes\": response.data.indexes,\n                \"totalCount\": response.data.response.length,\n                \n            })\n            this.handlePrepairDataView()\n            \n            //console.log(\"AGAIN\")\n          }).catch(function(error) {\n              console.log(\"ERROR AT GETTING ALL DATA:\", error)\n          }); \n         \n        }\n\n        handleChangeQueryType = (idx, e, eKey)  => {\n            const used_fields = this.state.used_fields.filter((sidx) => {\n              return(sidx !== idx)\n            })\n            e.persist()\n            //console.log(idx)\n            //console.log(e)\n            //console.log(e.target.text)\n            //alert(e.target.value)\n            const queries =  this.state.queries\n            queries[idx].search_type = e.target.text;\n            this.setState({\n              queries: queries,\n              used_fields: used_fields\n            })\n             \n            }\n\n        handleChangeQuery =(idx, value) => {\n                console.log(idx, value)\n                const queries =  this.state.queries\n                queries[idx].value = value\n                this.setState({\n                  queries: queries\n                })\n                 \n                }\n    \n                \n        handleAddField = () => {\n                    if (this.state.queries.length <= 5){\n                    const n_f = this.state.number_of_queries\n                    const queries = [...this.state.queries, {search_type:\"\", value: \"\", key: n_f + 1}]\n              \n                    this.setState({\n                      number_of_queries:n_f + 1,\n                      queries:queries\n                    })\n                    //console.log(n_f, queries)\n                    //console.log(this.state.used_fields)\n                  }\n              \n                  }\n        handleRemoveField = (id) => {\n                    if (this.state.queries && this.state.queries.length > 1) {\n                      console.log(\"REMOVING FIELD!\")\n                      console.log(this.state.queries.length)\n                    const n_f = this.state.number_of_queries\n                    const queries = this.state.queries.filter(({field}, idx) => {\n                      return(idx !== id)\n                    } )\n                    this.setState({\n                      number_of_queries: n_f - 1,\n                      queries: queries\n                    })\n              \n              \n                    //console.log(queries)\n                  }\n                  }\n        handleTitle = (index) => {\n                    return( this.state.queries[index].search_type == \"\" ? (\"Possible fields\"):(this.state.queries[index].search_type))\n                  }\n                  redirectToHome = () => {\n                    this.props.history.push(`/`)\n                  }\n        handleFilterData = () => {\n          // This function isresponsible for searching in table using queries\n          let data = [...this.state.data]\n          //console.log(\"DATAVIEW BEFORE:\", data)\n          this.state.queries.forEach(query => {\n                const queryPrepared = query.value.trim().toLowerCase()\n                if ( query.search_type && (query.value.length > 0) && (queryPrepared in this.state.indexes[query.search_type])) {\n                let convenient_inds = this.state.indexes[query.search_type][queryPrepared]\n                console.log(\"GOOD INDS\",convenient_inds)\n                data = data.filter( (row, i) => {\n                //console.log(query)\n                //console.log(row[fieldMap[query.search_type]])\n                \n                if (convenient_inds.indexOf(i) !== -1)\n                {\n                  console.log(i)\n                }\n                return (convenient_inds.indexOf(i) !== -1)\n\n                \n              }\n                    \n              )\n            }\n          })\n          //console.log(\"DATAVIEW:\", data)\n          this.setState({\n            \"dataView\":data\n          })\n        }\n        handleSubmit = (event) => {\n          event.preventDefault()\n          if( this.state.queries[0].value.length > 1) {\n            console.log(\"LENGTH\", this.state.queries[0].value.length)\n          this.handleFilterData()\n          } else {\n            console.log(\"Too short!!\")\n            const data = [...this.state.data ]\n            this.setState({\n              \"dataView\": data\n            })\n          }\n\n        }\n          makeTable = () => {\n          if (!this.state.queried) {\n          this.handleRequestAllData()\n          //console.log(\"DATAVIEW\",this.state.dataView)\n            this.setState({\n              \"queried\": true\n            })\n\n          }\n            const headings = [\n                          \"View Protocol\",\n                          \"Species\",\n                          \"Source Cell Type\", \n                          \"Target Cell Type\", \n                          \"Duration, days\",\n                          \"Medium\", \n                          \"Initial Culture\", \n                          //\"title\", \n                          \"Yield\",\n                          //\"Comment On Yield\",\n                          //\"Type Of Protocol\",\n                          //\"Comment On Protocol\",\n                          //\"DOI\",\n                          //\"authors\", \n                          //\"Chemicals CID\",\n                          \"Chemicals\",  \n                          //\"MOAs\", \n                          \"Transcription factors\"\n                        ]\n      \n            if (this.state.data.length === 0) {\n              return (\n              <div> </div>\n              \n              )\n            }\n            else {\n            console.log(\"LOG\", this.state.dataView[0])\n\n            return(\n            <div>\n      \n              <ObjectList\n              columns={\n                [\n                  {dataKey: 'ViewProtocol', header: 'View Protocol'},\n                  {dataKey: 'species', header: 'Species'},\n                  {dataKey: 'sourceCellType', header: \"Source Cell Type\"},\n                  {dataKey: 'targetCellType', header: \"Target Cell Type\"},\n                  {dataKey: 'duration', header: \"Duration, days\"},\n                  {dataKey: 'medium', header: 'Medium'},\n                  {dataKey: 'chemicals_common', header: 'Chemicals'},\n                  {dataKey: 'tfs', header: \"Transcription Factors\"},\n                ]\n              }\n              data={this.state.dataView}\n              meta={{\n      totalCount: this.state.dataView.length,\n    }}\n    favouritesEnabled={false}\n              />            \n            </div>\n            \n            )\n            \n\n          }\n      \n          }\n\n\n        render() {\n        \n            //console.log(this.state)\n              \n              \n          \n              return(\n                  <div className=\"query container center\">\n                  \n                  <h2>Query Database</h2>\n                  <br/>\n                   <>\n      \n                    <Form>\n                    { this.state.queries.map( (fields, index) => { \n                    return (\n                            <Form.Row className=\"justify-content-md-center\">\n                            <Col xs={6} md={4}>\n                              <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Query...\"\n                                onChange={(e) => {this.handleChangeQuery(index, e.target.value)}}\n                                \n                    \n                                \n                              \n                              />\n      \n                              </Col> \n                                <Col xs={6} md={2}>\n                              <DropdownButton\n                                title={this.handleTitle(index)}s\n                                \n                              >\n                              {this.state.possible_queries.map(field => {\n                                return(<Dropdown.Item eventkey={field} onSelect={(eKey, e) => {this.handleChangeQueryType(index, e, eKey)}}>{field}</Dropdown.Item>)\n                              })}\n                                \n                              </DropdownButton>{\"  \"}\n                              </Col>\n                              <Col xs={6} md={1}>\n                              <Button  variant=\"success\" onClick={this.handleAddField}>Add</Button> \n                              </Col>\n                              <Col xs={1} md={0}>\n                              <Button variant=\"danger\" onClick={ () => {this.handleRemoveField(index)}}>Remove</Button>\n                              </Col>\n                              </Form.Row>\n                    )})}\n                    <br/>\n                    <Form.Row className=\"justify-content-md-center\">\n                    <Button variant=\"success\" type=\"submit\" onClick={this.handleSubmit}>Query</Button>\n      \n                    </Form.Row>\n                          \n                    </Form>\n                  </>\n                  <br/>\n                  <div>\n                  {this.makeTable()}\n                  </div>\n                  <div></div>\n                  <div></div>\n                </div>\n              \n                \n                \n      \n      \n                   \n               \n                  \n              \n                      \n                      \n      \n              )\n      \n          \n}\n}\n\n\nexport default withRouter(Query);"]},"metadata":{},"sourceType":"module"}