{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar collection_1 = require(\"../util/collection\");\n/**\n * Shopify App Bridge can be extended with hooks, which run when actions are dispatched and updated.\n * Hooks are middleware functions that can modify or cancel actions.\n *\n * The [validation middleware](../validate/README.md) is implemented using hooks.\n *\n * @remarks\n * Here’s an example hook that modifies all Toast show actions to have a duration of five seconds.\n *\n * ```ts\n * import createApp, {LifecycleHook, DispatchActionHook} from '@shopify/app-bridge';\n * import {Toast} from '@shopify/app-bridge/actions'\n *\n * const app = createApp({apiKey: API_KEY, shopOrigin: SHOP_ORIGIN});\n *\n * function makeToastsFiveSeconds: DispatchActionHook(next) {\n *   return function(action){\n *       if(action.type === Toast.ActionType.SHOW) {\n *         const modifiedAction = {\n *           ...action,\n *           payload: {\n *             ...action.payload,\n *             duration: 5000,\n *           },\n *         };\n *         return next(modifiedAction);\n *       } else {\n *         // don’t modify non-Toast actions\n *         return next(action);\n *       }\n *   }\n * }\n *\n * app.hooks.set(LifecycleHook.DispatchAction, makeToastsFiveSeconds);\n * ```\n *\n * The hook function `makeToastsFiveSeconds()` takes a `next()` function as its argument.\n * The hook function returns an anonymous function, which takes the action being dispatched as its argument.\n *\n * To modify an action, call `next()` with the modified action, as in the example.\n * To cancel an action, don’t call `next()`, and the action will not be dispatched.\n */\n\n\nvar Hooks =\n/** @class */\nfunction () {\n  function Hooks() {\n    this.map = {};\n  }\n\n  Hooks.prototype.set = function (hook, handler) {\n    if (!this.map.hasOwnProperty(hook)) {\n      this.map[hook] = [];\n    }\n\n    var value = {\n      handler: handler,\n      remove: function () {}\n    };\n    var remove = collection_1.addAndRemoveFromCollection(this.map[hook], value);\n    value = {\n      handler: handler,\n      remove: remove\n    };\n    return remove;\n  };\n\n  Hooks.prototype.get = function (hook) {\n    var value = this.map[hook];\n    return value ? value.map(function (val) {\n      return val.handler;\n    }) : undefined;\n  };\n\n  Hooks.prototype.run = function (hook, final, context) {\n    var initialArgs = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      initialArgs[_i - 3] = arguments[_i];\n    }\n\n    var index = 0;\n    var handlers = this.get(hook) || [];\n\n    function handler() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var childHandler = handlers[index++];\n\n      if (childHandler) {\n        return childHandler(handler).apply(context, args);\n      }\n\n      return final.apply(context, args);\n    }\n\n    return handler.apply(context, initialArgs);\n  };\n\n  return Hooks;\n}();\n\nexports.default = Hooks;","map":{"version":3,"sources":["/home/alex/Documents/Work/ccfe/frontend/node_modules/@shopify/app-bridge/client/Hooks.js"],"names":["Object","defineProperty","exports","value","collection_1","require","Hooks","map","prototype","set","hook","handler","hasOwnProperty","remove","addAndRemoveFromCollection","get","val","undefined","run","final","context","initialArgs","_i","arguments","length","index","handlers","args","childHandler","apply","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAIC,KAAK;AAAG;AAAe,YAAY;AACnC,WAASA,KAAT,GAAiB;AACb,SAAKC,GAAL,GAAW,EAAX;AACH;;AACDD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,GAAsB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC3C,QAAI,CAAC,KAAKJ,GAAL,CAASK,cAAT,CAAwBF,IAAxB,CAAL,EAAoC;AAChC,WAAKH,GAAL,CAASG,IAAT,IAAiB,EAAjB;AACH;;AACD,QAAIP,KAAK,GAAG;AAAEQ,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,MAAM,EAAE,YAAY,CAAG;AAA3C,KAAZ;AACA,QAAIA,MAAM,GAAGT,YAAY,CAACU,0BAAb,CAAwC,KAAKP,GAAL,CAASG,IAAT,CAAxC,EAAwDP,KAAxD,CAAb;AACAA,IAAAA,KAAK,GAAG;AAAEQ,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,MAAM,EAAEA;AAA5B,KAAR;AACA,WAAOA,MAAP;AACH,GARD;;AASAP,EAAAA,KAAK,CAACE,SAAN,CAAgBO,GAAhB,GAAsB,UAAUL,IAAV,EAAgB;AAClC,QAAIP,KAAK,GAAG,KAAKI,GAAL,CAASG,IAAT,CAAZ;AACA,WAAOP,KAAK,GAAGA,KAAK,CAACI,GAAN,CAAU,UAAUS,GAAV,EAAe;AAAE,aAAOA,GAAG,CAACL,OAAX;AAAqB,KAAhD,CAAH,GAAuDM,SAAnE;AACH,GAHD;;AAIAX,EAAAA,KAAK,CAACE,SAAN,CAAgBU,GAAhB,GAAsB,UAAUR,IAAV,EAAgBS,KAAhB,EAAuBC,OAAvB,EAAgC;AAClD,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,WAAW,CAACC,EAAE,GAAG,CAAN,CAAX,GAAsBC,SAAS,CAACD,EAAD,CAA/B;AACH;;AACD,QAAIG,KAAK,GAAG,CAAZ;AACA,QAAIC,QAAQ,GAAG,KAAKX,GAAL,CAASL,IAAT,KAAkB,EAAjC;;AACA,aAASC,OAAT,GAAmB;AACf,UAAIgB,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIL,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CK,QAAAA,IAAI,CAACL,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACH;;AACD,UAAIM,YAAY,GAAGF,QAAQ,CAACD,KAAK,EAAN,CAA3B;;AACA,UAAIG,YAAJ,EAAkB;AACd,eAAOA,YAAY,CAACjB,OAAD,CAAZ,CAAsBkB,KAAtB,CAA4BT,OAA5B,EAAqCO,IAArC,CAAP;AACH;;AACD,aAAOR,KAAK,CAACU,KAAN,CAAYT,OAAZ,EAAqBO,IAArB,CAAP;AACH;;AACD,WAAOhB,OAAO,CAACkB,KAAR,CAAcT,OAAd,EAAuBC,WAAvB,CAAP;AACH,GAnBD;;AAoBA,SAAOf,KAAP;AACH,CAtC0B,EAA3B;;AAuCAJ,OAAO,CAAC4B,OAAR,GAAkBxB,KAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collection_1 = require(\"../util/collection\");\n/**\n * Shopify App Bridge can be extended with hooks, which run when actions are dispatched and updated.\n * Hooks are middleware functions that can modify or cancel actions.\n *\n * The [validation middleware](../validate/README.md) is implemented using hooks.\n *\n * @remarks\n * Here’s an example hook that modifies all Toast show actions to have a duration of five seconds.\n *\n * ```ts\n * import createApp, {LifecycleHook, DispatchActionHook} from '@shopify/app-bridge';\n * import {Toast} from '@shopify/app-bridge/actions'\n *\n * const app = createApp({apiKey: API_KEY, shopOrigin: SHOP_ORIGIN});\n *\n * function makeToastsFiveSeconds: DispatchActionHook(next) {\n *   return function(action){\n *       if(action.type === Toast.ActionType.SHOW) {\n *         const modifiedAction = {\n *           ...action,\n *           payload: {\n *             ...action.payload,\n *             duration: 5000,\n *           },\n *         };\n *         return next(modifiedAction);\n *       } else {\n *         // don’t modify non-Toast actions\n *         return next(action);\n *       }\n *   }\n * }\n *\n * app.hooks.set(LifecycleHook.DispatchAction, makeToastsFiveSeconds);\n * ```\n *\n * The hook function `makeToastsFiveSeconds()` takes a `next()` function as its argument.\n * The hook function returns an anonymous function, which takes the action being dispatched as its argument.\n *\n * To modify an action, call `next()` with the modified action, as in the example.\n * To cancel an action, don’t call `next()`, and the action will not be dispatched.\n */\nvar Hooks = /** @class */ (function () {\n    function Hooks() {\n        this.map = {};\n    }\n    Hooks.prototype.set = function (hook, handler) {\n        if (!this.map.hasOwnProperty(hook)) {\n            this.map[hook] = [];\n        }\n        var value = { handler: handler, remove: function () { } };\n        var remove = collection_1.addAndRemoveFromCollection(this.map[hook], value);\n        value = { handler: handler, remove: remove };\n        return remove;\n    };\n    Hooks.prototype.get = function (hook) {\n        var value = this.map[hook];\n        return value ? value.map(function (val) { return val.handler; }) : undefined;\n    };\n    Hooks.prototype.run = function (hook, final, context) {\n        var initialArgs = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            initialArgs[_i - 3] = arguments[_i];\n        }\n        var index = 0;\n        var handlers = this.get(hook) || [];\n        function handler() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var childHandler = handlers[index++];\n            if (childHandler) {\n                return childHandler(handler).apply(context, args);\n            }\n            return final.apply(context, args);\n        }\n        return handler.apply(context, initialArgs);\n    };\n    return Hooks;\n}());\nexports.default = Hooks;\n"]},"metadata":{},"sourceType":"script"}