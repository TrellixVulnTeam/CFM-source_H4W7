{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Weekdays;\n\n(function (Weekdays) {\n  Weekdays[Weekdays[\"Sunday\"] = 0] = \"Sunday\";\n  Weekdays[Weekdays[\"Monday\"] = 1] = \"Monday\";\n  Weekdays[Weekdays[\"Tuesday\"] = 2] = \"Tuesday\";\n  Weekdays[Weekdays[\"Wednesday\"] = 3] = \"Wednesday\";\n  Weekdays[Weekdays[\"Thursday\"] = 4] = \"Thursday\";\n  Weekdays[Weekdays[\"Friday\"] = 5] = \"Friday\";\n  Weekdays[Weekdays[\"Saturday\"] = 6] = \"Saturday\";\n})(Weekdays = exports.Weekdays || (exports.Weekdays = {}));\n\nvar Months;\n\n(function (Months) {\n  Months[Months[\"January\"] = 0] = \"January\";\n  Months[Months[\"February\"] = 1] = \"February\";\n  Months[Months[\"March\"] = 2] = \"March\";\n  Months[Months[\"April\"] = 3] = \"April\";\n  Months[Months[\"May\"] = 4] = \"May\";\n  Months[Months[\"June\"] = 5] = \"June\";\n  Months[Months[\"July\"] = 6] = \"July\";\n  Months[Months[\"August\"] = 7] = \"August\";\n  Months[Months[\"September\"] = 8] = \"September\";\n  Months[Months[\"October\"] = 9] = \"October\";\n  Months[Months[\"November\"] = 10] = \"November\";\n  Months[Months[\"December\"] = 11] = \"December\";\n})(Months = exports.Months || (exports.Months = {}));\n\nvar TimeUnit;\n\n(function (TimeUnit) {\n  TimeUnit[TimeUnit[\"Second\"] = 1000] = \"Second\";\n  TimeUnit[TimeUnit[\"Minute\"] = 60000] = \"Minute\";\n  TimeUnit[TimeUnit[\"Hour\"] = 3600000] = \"Hour\";\n  TimeUnit[TimeUnit[\"Day\"] = 86400000] = \"Day\";\n  TimeUnit[TimeUnit[\"Week\"] = 604800000] = \"Week\";\n  TimeUnit[TimeUnit[\"Year\"] = 31536000000] = \"Year\";\n})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));\n\nfunction getYearForRange(_a) {\n  var start = _a.start,\n      end = _a.end;\n\n  if (start) {\n    return start.getFullYear();\n  }\n\n  if (end) {\n    return end.getFullYear();\n  }\n\n  return new Date().getFullYear();\n}\n\nexports.getYearForRange = getYearForRange;\n\nfunction getMonthForRange(_a) {\n  var start = _a.start,\n      end = _a.end;\n\n  if (start) {\n    return start.getMonth();\n  }\n\n  if (end) {\n    return end.getMonth();\n  }\n\n  return new Date().getMonth();\n}\n\nexports.getMonthForRange = getMonthForRange;\n\nfunction abbreviationForWeekday(weekday) {\n  return Weekdays[weekday].substring(0, 2);\n}\n\nexports.abbreviationForWeekday = abbreviationForWeekday;\nvar WEEK_LENGTH = 7;\n\nfunction getWeeksForMonth(month, year, weekStartsOn) {\n  if (weekStartsOn === void 0) {\n    weekStartsOn = Weekdays.Sunday;\n  }\n\n  var firstOfMonth = new Date(year, month, 1);\n  var firstDayOfWeek = firstOfMonth.getDay();\n  var weeks = [[]];\n  var currentWeek = weeks[0];\n  var currentDate = firstOfMonth;\n  var orderedWeekday = getOrderedWeekdays(weekStartsOn);\n\n  for (var i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n\n  return weeks;\n}\n\nexports.getWeeksForMonth = getWeeksForMonth;\n\nfunction dateIsInRange(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  var start = range.start,\n      end = range.end;\n  return Boolean(start && day > start && end && day < end);\n}\n\nexports.dateIsInRange = dateIsInRange;\n\nfunction dateIsSelected(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  var start = range.start,\n      end = range.end;\n  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));\n}\n\nexports.dateIsSelected = dateIsSelected;\n\nfunction isSameDay(day1, day2) {\n  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();\n}\n\nexports.isSameDay = isSameDay;\n\nfunction getDateDiff(resolution, date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return Math.floor((today.getTime() - date.getTime()) / resolution);\n}\n\nexports.getDateDiff = getDateDiff;\n\nfunction getNewRange(range, selected) {\n  if (range == null) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  var start = range.start,\n      end = range.end;\n\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {\n        start: selected,\n        end: selected\n      };\n    }\n\n    return {\n      start: start,\n      end: selected\n    };\n  }\n\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {\n        start: selected,\n        end: end\n      };\n    }\n\n    return {\n      start: start || end,\n      end: selected\n    };\n  }\n\n  return {\n    start: selected,\n    end: selected\n  };\n}\n\nexports.getNewRange = getNewRange;\n\nfunction getNextDisplayMonth(month) {\n  if (Months[month] === Months[11]) {\n    return 0;\n  }\n\n  return month + 1;\n}\n\nexports.getNextDisplayMonth = getNextDisplayMonth;\n\nfunction getNextDisplayYear(month, year) {\n  if (Months[month] === Months[11]) {\n    return year + 1;\n  }\n\n  return year;\n}\n\nexports.getNextDisplayYear = getNextDisplayYear;\n\nfunction getPreviousDisplayMonth(month) {\n  if (Months[month] === Months[0]) {\n    return 11;\n  }\n\n  return month - 1;\n}\n\nexports.getPreviousDisplayMonth = getPreviousDisplayMonth;\n\nfunction getPreviousDisplayYear(month, year) {\n  if (Months[month] === Months[0]) {\n    return year - 1;\n  }\n\n  return year;\n}\n\nexports.getPreviousDisplayYear = getPreviousDisplayYear;\n\nfunction isDateAfter(date, dateToCompare) {\n  return date.getTime() > dateToCompare.getTime();\n}\n\nexports.isDateAfter = isDateAfter;\n\nfunction isDateBefore(date, dateToCompare) {\n  return date.getTime() < dateToCompare.getTime();\n}\n\nexports.isDateBefore = isDateBefore;\n\nfunction isLessThanOneMinuteAgo(date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Minute;\n}\n\nexports.isLessThanOneMinuteAgo = isLessThanOneMinuteAgo;\n\nfunction isLessThanOneHourAgo(date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Hour;\n}\n\nexports.isLessThanOneHourAgo = isLessThanOneHourAgo;\n\nfunction isLessThanOneDayAgo(date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Day;\n}\n\nexports.isLessThanOneDayAgo = isLessThanOneDayAgo;\n\nfunction isLessThanOneWeekAgo(date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Week;\n}\n\nexports.isLessThanOneWeekAgo = isLessThanOneWeekAgo;\n\nfunction isLessThanOneYearAgo(date, today) {\n  if (today === void 0) {\n    today = new Date();\n  }\n\n  return isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Year;\n}\n\nexports.isLessThanOneYearAgo = isLessThanOneYearAgo;\n\nfunction isSameMonthAndYear(source, target) {\n  return source.getFullYear() === target.getFullYear() && source.getMonth() === target.getMonth();\n}\n\nexports.isSameMonthAndYear = isSameMonthAndYear;\n\nfunction isSameDate(source, target) {\n  return isSameMonthAndYear(source, target) && source.getDate() === target.getDate();\n}\n\nexports.isSameDate = isSameDate;\n\nfunction isToday(date) {\n  var today = new Date();\n  return isSameDate(today, date);\n}\n\nexports.isToday = isToday;\n\nfunction isYesterday(date) {\n  var yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n  return isSameDate(yesterday, date);\n}\n\nexports.isYesterday = isYesterday;\nvar WEEKDAYS = [Weekdays.Sunday, Weekdays.Monday, Weekdays.Tuesday, Weekdays.Wednesday, Weekdays.Thursday, Weekdays.Friday, Weekdays.Saturday];\n\nfunction getOrderedWeekdays(weekStartsOn) {\n  var weekDays = WEEKDAYS.slice();\n  var restOfDays = weekDays.splice(weekStartsOn);\n  return restOfDays.concat(weekDays);\n}","map":{"version":3,"sources":["/home/alex/Documents/Work/ccfe/frontend/node_modules/@shopify/javascript-utilities/dates.js"],"names":["Object","defineProperty","exports","value","Weekdays","Months","TimeUnit","getYearForRange","_a","start","end","getFullYear","Date","getMonthForRange","getMonth","abbreviationForWeekday","weekday","substring","WEEK_LENGTH","getWeeksForMonth","month","year","weekStartsOn","Sunday","firstOfMonth","firstDayOfWeek","getDay","weeks","currentWeek","currentDate","orderedWeekday","getOrderedWeekdays","i","indexOf","push","length","getDate","dateIsInRange","day","range","Boolean","dateIsSelected","isSameDay","day1","day2","getDateDiff","resolution","date","today","Math","floor","getTime","getNewRange","selected","isDateAfter","isDateBefore","getNextDisplayMonth","getNextDisplayYear","getPreviousDisplayMonth","getPreviousDisplayYear","dateToCompare","isLessThanOneMinuteAgo","Minute","isLessThanOneHourAgo","Hour","isLessThanOneDayAgo","Day","isLessThanOneWeekAgo","Week","isLessThanOneYearAgo","Year","isSameMonthAndYear","source","target","isSameDate","isToday","isYesterday","yesterday","setDate","WEEKDAYS","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","weekDays","slice","restOfDays","splice","concat"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;AACjBA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,CAAtB,CAAR,GAAmC,QAAnC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,CAAtB,CAAR,GAAmC,QAAnC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,SAAD,CAAR,GAAsB,CAAvB,CAAR,GAAoC,SAApC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,WAAD,CAAR,GAAwB,CAAzB,CAAR,GAAsC,WAAtC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,UAAD,CAAR,GAAuB,CAAxB,CAAR,GAAqC,UAArC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,CAAtB,CAAR,GAAmC,QAAnC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,UAAD,CAAR,GAAuB,CAAxB,CAAR,GAAqC,UAArC;AACH,CARD,EAQGA,QAAQ,GAAGF,OAAO,CAACE,QAAR,KAAqBF,OAAO,CAACE,QAAR,GAAmB,EAAxC,CARd;;AASA,IAAIC,MAAJ;;AACA,CAAC,UAAUA,MAAV,EAAkB;AACfA,EAAAA,MAAM,CAACA,MAAM,CAAC,SAAD,CAAN,GAAoB,CAArB,CAAN,GAAgC,SAAhC;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,UAAD,CAAN,GAAqB,CAAtB,CAAN,GAAiC,UAAjC;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,OAAD,CAAN,GAAkB,CAAnB,CAAN,GAA8B,OAA9B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,OAAD,CAAN,GAAkB,CAAnB,CAAN,GAA8B,OAA9B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,KAAD,CAAN,GAAgB,CAAjB,CAAN,GAA4B,KAA5B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,MAAD,CAAN,GAAiB,CAAlB,CAAN,GAA6B,MAA7B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,MAAD,CAAN,GAAiB,CAAlB,CAAN,GAA6B,MAA7B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,QAAD,CAAN,GAAmB,CAApB,CAAN,GAA+B,QAA/B;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,WAAD,CAAN,GAAsB,CAAvB,CAAN,GAAkC,WAAlC;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,SAAD,CAAN,GAAoB,CAArB,CAAN,GAAgC,SAAhC;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,UAAD,CAAN,GAAqB,EAAtB,CAAN,GAAkC,UAAlC;AACAA,EAAAA,MAAM,CAACA,MAAM,CAAC,UAAD,CAAN,GAAqB,EAAtB,CAAN,GAAkC,UAAlC;AACH,CAbD,EAaGA,MAAM,GAAGH,OAAO,CAACG,MAAR,KAAmBH,OAAO,CAACG,MAAR,GAAiB,EAApC,CAbZ;;AAcA,IAAIC,QAAJ;;AACA,CAAC,UAAUA,QAAV,EAAoB;AACjBA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,IAAtB,CAAR,GAAsC,QAAtC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,QAAD,CAAR,GAAqB,KAAtB,CAAR,GAAuC,QAAvC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,MAAD,CAAR,GAAmB,OAApB,CAAR,GAAuC,MAAvC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,KAAD,CAAR,GAAkB,QAAnB,CAAR,GAAuC,KAAvC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,MAAD,CAAR,GAAmB,SAApB,CAAR,GAAyC,MAAzC;AACAA,EAAAA,QAAQ,CAACA,QAAQ,CAAC,MAAD,CAAR,GAAmB,WAApB,CAAR,GAA2C,MAA3C;AACH,CAPD,EAOGA,QAAQ,GAAGJ,OAAO,CAACI,QAAR,KAAqBJ,OAAO,CAACI,QAAR,GAAmB,EAAxC,CAPd;;AAQA,SAASC,eAAT,CAAyBC,EAAzB,EAA6B;AACzB,MAAIC,KAAK,GAAGD,EAAE,CAACC,KAAf;AAAA,MAAsBC,GAAG,GAAGF,EAAE,CAACE,GAA/B;;AACA,MAAID,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACE,WAAN,EAAP;AACH;;AACD,MAAID,GAAJ,EAAS;AACL,WAAOA,GAAG,CAACC,WAAJ,EAAP;AACH;;AACD,SAAQ,IAAIC,IAAJ,EAAD,CAAaD,WAAb,EAAP;AACH;;AACDT,OAAO,CAACK,eAAR,GAA0BA,eAA1B;;AACA,SAASM,gBAAT,CAA0BL,EAA1B,EAA8B;AAC1B,MAAIC,KAAK,GAAGD,EAAE,CAACC,KAAf;AAAA,MAAsBC,GAAG,GAAGF,EAAE,CAACE,GAA/B;;AACA,MAAID,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACK,QAAN,EAAP;AACH;;AACD,MAAIJ,GAAJ,EAAS;AACL,WAAOA,GAAG,CAACI,QAAJ,EAAP;AACH;;AACD,SAAQ,IAAIF,IAAJ,EAAD,CAAaE,QAAb,EAAP;AACH;;AACDZ,OAAO,CAACW,gBAAR,GAA2BA,gBAA3B;;AACA,SAASE,sBAAT,CAAgCC,OAAhC,EAAyC;AACrC,SAAOZ,QAAQ,CAACY,OAAD,CAAR,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,CAAP;AACH;;AACDf,OAAO,CAACa,sBAAR,GAAiCA,sBAAjC;AACA,IAAIG,WAAW,GAAG,CAAlB;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,YAAvC,EAAqD;AACjD,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAGlB,QAAQ,CAACmB,MAAxB;AAAiC;;AAChE,MAAIC,YAAY,GAAG,IAAIZ,IAAJ,CAASS,IAAT,EAAeD,KAAf,EAAsB,CAAtB,CAAnB;AACA,MAAIK,cAAc,GAAGD,YAAY,CAACE,MAAb,EAArB;AACA,MAAIC,KAAK,GAAG,CAAC,EAAD,CAAZ;AACA,MAAIC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAvB;AACA,MAAIE,WAAW,GAAGL,YAAlB;AACA,MAAIM,cAAc,GAAGC,kBAAkB,CAACT,YAAD,CAAvC;;AACA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAAc,CAACG,OAAf,CAAuBR,cAAvB,CAApB,EAA4DO,CAAC,EAA7D,EAAiE;AAC7DJ,IAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB;AACH;;AACD,SAAOL,WAAW,CAACf,QAAZ,OAA2BM,KAAlC,EAAyC;AACrC,QAAIQ,WAAW,CAACO,MAAZ,KAAuBjB,WAA3B,EAAwC;AACpCU,MAAAA,WAAW,GAAG,EAAd;AACAD,MAAAA,KAAK,CAACO,IAAN,CAAWN,WAAX;AACH;;AACDA,IAAAA,WAAW,CAACM,IAAZ,CAAiBL,WAAjB;AACAA,IAAAA,WAAW,GAAG,IAAIjB,IAAJ,CAASS,IAAT,EAAeD,KAAf,EAAsBS,WAAW,CAACO,OAAZ,KAAwB,CAA9C,CAAd;AACH;;AACD,SAAOR,WAAW,CAACO,MAAZ,GAAqB,CAA5B,EAA+B;AAC3BP,IAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB;AACH;;AACD,SAAOP,KAAP;AACH;;AACDzB,OAAO,CAACiB,gBAAR,GAA2BA,gBAA3B;;AACA,SAASkB,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmC;AAC/B,MAAID,GAAG,IAAI,IAAX,EAAiB;AACb,WAAO,KAAP;AACH;;AACD,MAAI7B,KAAK,GAAG8B,KAAK,CAAC9B,KAAlB;AAAA,MAAyBC,GAAG,GAAG6B,KAAK,CAAC7B,GAArC;AACA,SAAO8B,OAAO,CAAE/B,KAAK,IAAI6B,GAAG,GAAG7B,KAAhB,IAA2BC,GAAG,IAAI4B,GAAG,GAAG5B,GAAzC,CAAd;AACH;;AACDR,OAAO,CAACmC,aAAR,GAAwBA,aAAxB;;AACA,SAASI,cAAT,CAAwBH,GAAxB,EAA6BC,KAA7B,EAAoC;AAChC,MAAID,GAAG,IAAI,IAAX,EAAiB;AACb,WAAO,KAAP;AACH;;AACD,MAAI7B,KAAK,GAAG8B,KAAK,CAAC9B,KAAlB;AAAA,MAAyBC,GAAG,GAAG6B,KAAK,CAAC7B,GAArC;AACA,SAAO8B,OAAO,CAAE/B,KAAK,IAAIiC,SAAS,CAACjC,KAAD,EAAQ6B,GAAR,CAAnB,IAAqC5B,GAAG,IAAIgC,SAAS,CAAChC,GAAD,EAAM4B,GAAN,CAAtD,CAAd;AACH;;AACDpC,OAAO,CAACuC,cAAR,GAAyBA,cAAzB;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAC3B,SAASD,IAAI,CAACP,OAAL,OAAmBQ,IAAI,CAACR,OAAL,EAApB,IACHO,IAAI,CAAC7B,QAAL,OAAoB8B,IAAI,CAAC9B,QAAL,EADjB,IAEH6B,IAAI,CAAChC,WAAL,OAAuBiC,IAAI,CAACjC,WAAL,EAF5B;AAGH;;AACDT,OAAO,CAACwC,SAAR,GAAoBA,SAApB;;AACA,SAASG,WAAT,CAAqBC,UAArB,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8C;AAC1C,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAOqC,IAAI,CAACC,KAAL,CAAW,CAACF,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAnB,IAAqCL,UAAhD,CAAP;AACH;;AACD5C,OAAO,CAAC2C,WAAR,GAAsBA,WAAtB;;AACA,SAASO,WAAT,CAAqBb,KAArB,EAA4Bc,QAA5B,EAAsC;AAClC,MAAId,KAAK,IAAI,IAAb,EAAmB;AACf,WAAO;AAAE9B,MAAAA,KAAK,EAAE4C,QAAT;AAAmB3C,MAAAA,GAAG,EAAE2C;AAAxB,KAAP;AACH;;AACD,MAAI5C,KAAK,GAAG8B,KAAK,CAAC9B,KAAlB;AAAA,MAAyBC,GAAG,GAAG6B,KAAK,CAAC7B,GAArC;;AACA,MAAIA,GAAG,KAAK4C,WAAW,CAAC7C,KAAD,EAAQC,GAAR,CAAX,IAA2B6C,YAAY,CAAC9C,KAAD,EAAQC,GAAR,CAA5C,CAAP,EAAkE;AAC9D,WAAO;AAAED,MAAAA,KAAK,EAAE4C,QAAT;AAAmB3C,MAAAA,GAAG,EAAE2C;AAAxB,KAAP;AACH;;AACD,MAAI5C,KAAJ,EAAW;AACP,QAAI8C,YAAY,CAACF,QAAD,EAAW5C,KAAX,CAAhB,EAAmC;AAC/B,aAAO;AAAEA,QAAAA,KAAK,EAAE4C,QAAT;AAAmB3C,QAAAA,GAAG,EAAE2C;AAAxB,OAAP;AACH;;AACD,WAAO;AAAE5C,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,GAAG,EAAE2C;AAArB,KAAP;AACH;;AACD,MAAI3C,GAAJ,EAAS;AACL,QAAI6C,YAAY,CAACF,QAAD,EAAW3C,GAAX,CAAhB,EAAiC;AAC7B,aAAO;AAAED,QAAAA,KAAK,EAAE4C,QAAT;AAAmB3C,QAAAA,GAAG,EAAEA;AAAxB,OAAP;AACH;;AACD,WAAO;AAAED,MAAAA,KAAK,EAAEA,KAAK,IAAIC,GAAlB;AAAuBA,MAAAA,GAAG,EAAE2C;AAA5B,KAAP;AACH;;AACD,SAAO;AAAE5C,IAAAA,KAAK,EAAE4C,QAAT;AAAmB3C,IAAAA,GAAG,EAAE2C;AAAxB,GAAP;AACH;;AACDnD,OAAO,CAACkD,WAAR,GAAsBA,WAAtB;;AACA,SAASI,mBAAT,CAA6BpC,KAA7B,EAAoC;AAChC,MAAIf,MAAM,CAACe,KAAD,CAAN,KAAkBf,MAAM,CAAC,EAAD,CAA5B,EAAkC;AAC9B,WAAO,CAAP;AACH;;AACD,SAAOe,KAAK,GAAG,CAAf;AACH;;AACDlB,OAAO,CAACsD,mBAAR,GAA8BA,mBAA9B;;AACA,SAASC,kBAAT,CAA4BrC,KAA5B,EAAmCC,IAAnC,EAAyC;AACrC,MAAIhB,MAAM,CAACe,KAAD,CAAN,KAAkBf,MAAM,CAAC,EAAD,CAA5B,EAAkC;AAC9B,WAAOgB,IAAI,GAAG,CAAd;AACH;;AACD,SAAOA,IAAP;AACH;;AACDnB,OAAO,CAACuD,kBAAR,GAA6BA,kBAA7B;;AACA,SAASC,uBAAT,CAAiCtC,KAAjC,EAAwC;AACpC,MAAIf,MAAM,CAACe,KAAD,CAAN,KAAkBf,MAAM,CAAC,CAAD,CAA5B,EAAiC;AAC7B,WAAO,EAAP;AACH;;AACD,SAAOe,KAAK,GAAG,CAAf;AACH;;AACDlB,OAAO,CAACwD,uBAAR,GAAkCA,uBAAlC;;AACA,SAASC,sBAAT,CAAgCvC,KAAhC,EAAuCC,IAAvC,EAA6C;AACzC,MAAIhB,MAAM,CAACe,KAAD,CAAN,KAAkBf,MAAM,CAAC,CAAD,CAA5B,EAAiC;AAC7B,WAAOgB,IAAI,GAAG,CAAd;AACH;;AACD,SAAOA,IAAP;AACH;;AACDnB,OAAO,CAACyD,sBAAR,GAAiCA,sBAAjC;;AACA,SAASL,WAAT,CAAqBP,IAArB,EAA2Ba,aAA3B,EAA0C;AACtC,SAAOb,IAAI,CAACI,OAAL,KAAiBS,aAAa,CAACT,OAAd,EAAxB;AACH;;AACDjD,OAAO,CAACoD,WAAR,GAAsBA,WAAtB;;AACA,SAASC,YAAT,CAAsBR,IAAtB,EAA4Ba,aAA5B,EAA2C;AACvC,SAAOb,IAAI,CAACI,OAAL,KAAiBS,aAAa,CAACT,OAAd,EAAxB;AACH;;AACDjD,OAAO,CAACqD,YAAR,GAAuBA,YAAvB;;AACA,SAASM,sBAAT,CAAgCd,IAAhC,EAAsCC,KAAtC,EAA6C;AACzC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAQ2C,YAAY,CAACR,IAAD,EAAOC,KAAP,CAAZ,IAA6BA,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAlB,GAAmC7C,QAAQ,CAACwD,MAAjF;AACH;;AACD5D,OAAO,CAAC2D,sBAAR,GAAiCA,sBAAjC;;AACA,SAASE,oBAAT,CAA8BhB,IAA9B,EAAoCC,KAApC,EAA2C;AACvC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAQ2C,YAAY,CAACR,IAAD,EAAOC,KAAP,CAAZ,IAA6BA,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAlB,GAAmC7C,QAAQ,CAAC0D,IAAjF;AACH;;AACD9D,OAAO,CAAC6D,oBAAR,GAA+BA,oBAA/B;;AACA,SAASE,mBAAT,CAA6BlB,IAA7B,EAAmCC,KAAnC,EAA0C;AACtC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAQ2C,YAAY,CAACR,IAAD,EAAOC,KAAP,CAAZ,IAA6BA,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAlB,GAAmC7C,QAAQ,CAAC4D,GAAjF;AACH;;AACDhE,OAAO,CAAC+D,mBAAR,GAA8BA,mBAA9B;;AACA,SAASE,oBAAT,CAA8BpB,IAA9B,EAAoCC,KAApC,EAA2C;AACvC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAQ2C,YAAY,CAACR,IAAD,EAAOC,KAAP,CAAZ,IAA6BA,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAlB,GAAmC7C,QAAQ,CAAC8D,IAAjF;AACH;;AACDlE,OAAO,CAACiE,oBAAR,GAA+BA,oBAA/B;;AACA,SAASE,oBAAT,CAA8BtB,IAA9B,EAAoCC,KAApC,EAA2C;AACvC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,IAAIpC,IAAJ,EAAR;AAAqB;;AAC7C,SAAQ2C,YAAY,CAACR,IAAD,EAAOC,KAAP,CAAZ,IAA6BA,KAAK,CAACG,OAAN,KAAkBJ,IAAI,CAACI,OAAL,EAAlB,GAAmC7C,QAAQ,CAACgE,IAAjF;AACH;;AACDpE,OAAO,CAACmE,oBAAR,GAA+BA,oBAA/B;;AACA,SAASE,kBAAT,CAA4BC,MAA5B,EAAoCC,MAApC,EAA4C;AACxC,SAAQD,MAAM,CAAC7D,WAAP,OAAyB8D,MAAM,CAAC9D,WAAP,EAAzB,IACJ6D,MAAM,CAAC1D,QAAP,OAAsB2D,MAAM,CAAC3D,QAAP,EAD1B;AAEH;;AACDZ,OAAO,CAACqE,kBAAR,GAA6BA,kBAA7B;;AACA,SAASG,UAAT,CAAoBF,MAApB,EAA4BC,MAA5B,EAAoC;AAChC,SAAQF,kBAAkB,CAACC,MAAD,EAASC,MAAT,CAAlB,IAAsCD,MAAM,CAACpC,OAAP,OAAqBqC,MAAM,CAACrC,OAAP,EAAnE;AACH;;AACDlC,OAAO,CAACwE,UAAR,GAAqBA,UAArB;;AACA,SAASC,OAAT,CAAiB5B,IAAjB,EAAuB;AACnB,MAAIC,KAAK,GAAG,IAAIpC,IAAJ,EAAZ;AACA,SAAO8D,UAAU,CAAC1B,KAAD,EAAQD,IAAR,CAAjB;AACH;;AACD7C,OAAO,CAACyE,OAAR,GAAkBA,OAAlB;;AACA,SAASC,WAAT,CAAqB7B,IAArB,EAA2B;AACvB,MAAI8B,SAAS,GAAG,IAAIjE,IAAJ,EAAhB;AACAiE,EAAAA,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAACzC,OAAV,KAAsB,CAAxC;AACA,SAAOsC,UAAU,CAACG,SAAD,EAAY9B,IAAZ,CAAjB;AACH;;AACD7C,OAAO,CAAC0E,WAAR,GAAsBA,WAAtB;AACA,IAAIG,QAAQ,GAAG,CACX3E,QAAQ,CAACmB,MADE,EAEXnB,QAAQ,CAAC4E,MAFE,EAGX5E,QAAQ,CAAC6E,OAHE,EAIX7E,QAAQ,CAAC8E,SAJE,EAKX9E,QAAQ,CAAC+E,QALE,EAMX/E,QAAQ,CAACgF,MANE,EAOXhF,QAAQ,CAACiF,QAPE,CAAf;;AASA,SAAStD,kBAAT,CAA4BT,YAA5B,EAA0C;AACtC,MAAIgE,QAAQ,GAAGP,QAAQ,CAACQ,KAAT,EAAf;AACA,MAAIC,UAAU,GAAGF,QAAQ,CAACG,MAAT,CAAgBnE,YAAhB,CAAjB;AACA,SAAOkE,UAAU,CAACE,MAAX,CAAkBJ,QAAlB,CAAP;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Weekdays;\n(function (Weekdays) {\n    Weekdays[Weekdays[\"Sunday\"] = 0] = \"Sunday\";\n    Weekdays[Weekdays[\"Monday\"] = 1] = \"Monday\";\n    Weekdays[Weekdays[\"Tuesday\"] = 2] = \"Tuesday\";\n    Weekdays[Weekdays[\"Wednesday\"] = 3] = \"Wednesday\";\n    Weekdays[Weekdays[\"Thursday\"] = 4] = \"Thursday\";\n    Weekdays[Weekdays[\"Friday\"] = 5] = \"Friday\";\n    Weekdays[Weekdays[\"Saturday\"] = 6] = \"Saturday\";\n})(Weekdays = exports.Weekdays || (exports.Weekdays = {}));\nvar Months;\n(function (Months) {\n    Months[Months[\"January\"] = 0] = \"January\";\n    Months[Months[\"February\"] = 1] = \"February\";\n    Months[Months[\"March\"] = 2] = \"March\";\n    Months[Months[\"April\"] = 3] = \"April\";\n    Months[Months[\"May\"] = 4] = \"May\";\n    Months[Months[\"June\"] = 5] = \"June\";\n    Months[Months[\"July\"] = 6] = \"July\";\n    Months[Months[\"August\"] = 7] = \"August\";\n    Months[Months[\"September\"] = 8] = \"September\";\n    Months[Months[\"October\"] = 9] = \"October\";\n    Months[Months[\"November\"] = 10] = \"November\";\n    Months[Months[\"December\"] = 11] = \"December\";\n})(Months = exports.Months || (exports.Months = {}));\nvar TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"Second\"] = 1000] = \"Second\";\n    TimeUnit[TimeUnit[\"Minute\"] = 60000] = \"Minute\";\n    TimeUnit[TimeUnit[\"Hour\"] = 3600000] = \"Hour\";\n    TimeUnit[TimeUnit[\"Day\"] = 86400000] = \"Day\";\n    TimeUnit[TimeUnit[\"Week\"] = 604800000] = \"Week\";\n    TimeUnit[TimeUnit[\"Year\"] = 31536000000] = \"Year\";\n})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));\nfunction getYearForRange(_a) {\n    var start = _a.start, end = _a.end;\n    if (start) {\n        return start.getFullYear();\n    }\n    if (end) {\n        return end.getFullYear();\n    }\n    return (new Date()).getFullYear();\n}\nexports.getYearForRange = getYearForRange;\nfunction getMonthForRange(_a) {\n    var start = _a.start, end = _a.end;\n    if (start) {\n        return start.getMonth();\n    }\n    if (end) {\n        return end.getMonth();\n    }\n    return (new Date()).getMonth();\n}\nexports.getMonthForRange = getMonthForRange;\nfunction abbreviationForWeekday(weekday) {\n    return Weekdays[weekday].substring(0, 2);\n}\nexports.abbreviationForWeekday = abbreviationForWeekday;\nvar WEEK_LENGTH = 7;\nfunction getWeeksForMonth(month, year, weekStartsOn) {\n    if (weekStartsOn === void 0) { weekStartsOn = Weekdays.Sunday; }\n    var firstOfMonth = new Date(year, month, 1);\n    var firstDayOfWeek = firstOfMonth.getDay();\n    var weeks = [[]];\n    var currentWeek = weeks[0];\n    var currentDate = firstOfMonth;\n    var orderedWeekday = getOrderedWeekdays(weekStartsOn);\n    for (var i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n        currentWeek.push(null);\n    }\n    while (currentDate.getMonth() === month) {\n        if (currentWeek.length === WEEK_LENGTH) {\n            currentWeek = [];\n            weeks.push(currentWeek);\n        }\n        currentWeek.push(currentDate);\n        currentDate = new Date(year, month, currentDate.getDate() + 1);\n    }\n    while (currentWeek.length < 7) {\n        currentWeek.push(null);\n    }\n    return weeks;\n}\nexports.getWeeksForMonth = getWeeksForMonth;\nfunction dateIsInRange(day, range) {\n    if (day == null) {\n        return false;\n    }\n    var start = range.start, end = range.end;\n    return Boolean((start && day > start) && (end && day < end));\n}\nexports.dateIsInRange = dateIsInRange;\nfunction dateIsSelected(day, range) {\n    if (day == null) {\n        return false;\n    }\n    var start = range.start, end = range.end;\n    return Boolean((start && isSameDay(start, day)) || (end && isSameDay(end, day)));\n}\nexports.dateIsSelected = dateIsSelected;\nfunction isSameDay(day1, day2) {\n    return ((day1.getDate() === day2.getDate()) &&\n        (day1.getMonth() === day2.getMonth()) &&\n        (day1.getFullYear() === day2.getFullYear()));\n}\nexports.isSameDay = isSameDay;\nfunction getDateDiff(resolution, date, today) {\n    if (today === void 0) { today = new Date(); }\n    return Math.floor((today.getTime() - date.getTime()) / resolution);\n}\nexports.getDateDiff = getDateDiff;\nfunction getNewRange(range, selected) {\n    if (range == null) {\n        return { start: selected, end: selected };\n    }\n    var start = range.start, end = range.end;\n    if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n        return { start: selected, end: selected };\n    }\n    if (start) {\n        if (isDateBefore(selected, start)) {\n            return { start: selected, end: selected };\n        }\n        return { start: start, end: selected };\n    }\n    if (end) {\n        if (isDateBefore(selected, end)) {\n            return { start: selected, end: end };\n        }\n        return { start: start || end, end: selected };\n    }\n    return { start: selected, end: selected };\n}\nexports.getNewRange = getNewRange;\nfunction getNextDisplayMonth(month) {\n    if (Months[month] === Months[11]) {\n        return 0;\n    }\n    return month + 1;\n}\nexports.getNextDisplayMonth = getNextDisplayMonth;\nfunction getNextDisplayYear(month, year) {\n    if (Months[month] === Months[11]) {\n        return year + 1;\n    }\n    return year;\n}\nexports.getNextDisplayYear = getNextDisplayYear;\nfunction getPreviousDisplayMonth(month) {\n    if (Months[month] === Months[0]) {\n        return 11;\n    }\n    return month - 1;\n}\nexports.getPreviousDisplayMonth = getPreviousDisplayMonth;\nfunction getPreviousDisplayYear(month, year) {\n    if (Months[month] === Months[0]) {\n        return year - 1;\n    }\n    return year;\n}\nexports.getPreviousDisplayYear = getPreviousDisplayYear;\nfunction isDateAfter(date, dateToCompare) {\n    return date.getTime() > dateToCompare.getTime();\n}\nexports.isDateAfter = isDateAfter;\nfunction isDateBefore(date, dateToCompare) {\n    return date.getTime() < dateToCompare.getTime();\n}\nexports.isDateBefore = isDateBefore;\nfunction isLessThanOneMinuteAgo(date, today) {\n    if (today === void 0) { today = new Date(); }\n    return (isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Minute);\n}\nexports.isLessThanOneMinuteAgo = isLessThanOneMinuteAgo;\nfunction isLessThanOneHourAgo(date, today) {\n    if (today === void 0) { today = new Date(); }\n    return (isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Hour);\n}\nexports.isLessThanOneHourAgo = isLessThanOneHourAgo;\nfunction isLessThanOneDayAgo(date, today) {\n    if (today === void 0) { today = new Date(); }\n    return (isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Day);\n}\nexports.isLessThanOneDayAgo = isLessThanOneDayAgo;\nfunction isLessThanOneWeekAgo(date, today) {\n    if (today === void 0) { today = new Date(); }\n    return (isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Week);\n}\nexports.isLessThanOneWeekAgo = isLessThanOneWeekAgo;\nfunction isLessThanOneYearAgo(date, today) {\n    if (today === void 0) { today = new Date(); }\n    return (isDateBefore(date, today) && today.getTime() - date.getTime() < TimeUnit.Year);\n}\nexports.isLessThanOneYearAgo = isLessThanOneYearAgo;\nfunction isSameMonthAndYear(source, target) {\n    return (source.getFullYear() === target.getFullYear() &&\n        source.getMonth() === target.getMonth());\n}\nexports.isSameMonthAndYear = isSameMonthAndYear;\nfunction isSameDate(source, target) {\n    return (isSameMonthAndYear(source, target) && source.getDate() === target.getDate());\n}\nexports.isSameDate = isSameDate;\nfunction isToday(date) {\n    var today = new Date();\n    return isSameDate(today, date);\n}\nexports.isToday = isToday;\nfunction isYesterday(date) {\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return isSameDate(yesterday, date);\n}\nexports.isYesterday = isYesterday;\nvar WEEKDAYS = [\n    Weekdays.Sunday,\n    Weekdays.Monday,\n    Weekdays.Tuesday,\n    Weekdays.Wednesday,\n    Weekdays.Thursday,\n    Weekdays.Friday,\n    Weekdays.Saturday,\n];\nfunction getOrderedWeekdays(weekStartsOn) {\n    var weekDays = WEEKDAYS.slice();\n    var restOfDays = weekDays.splice(weekStartsOn);\n    return restOfDays.concat(weekDays);\n}\n"]},"metadata":{},"sourceType":"script"}